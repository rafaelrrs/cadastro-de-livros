// <auto-generated />
using AppLivroCadastro.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AppLivroCadastro.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250501190408_AdicionarRelatorioLivro")]
    partial class AdicionarRelatorioLivro
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.4");

            modelBuilder.Entity("AppLivroCadastro.Domain.Entities.Assunto", b =>
                {
                    b.Property<int>("CodAs")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.HasKey("CodAs");

                    b.ToTable("Assuntos");
                });

            modelBuilder.Entity("AppLivroCadastro.Domain.Entities.Autor", b =>
                {
                    b.Property<int>("CodAu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("TEXT");

                    b.HasKey("CodAu");

                    b.ToTable("Autores");
                });

            modelBuilder.Entity("AppLivroCadastro.Domain.Entities.FormaCompra", b =>
                {
                    b.Property<int>("FormaCompraID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("FormaCompraID");

                    b.HasIndex("Nome")
                        .IsUnique();

                    b.ToTable("FormasCompra");
                });

            modelBuilder.Entity("AppLivroCadastro.Domain.Entities.Livro", b =>
                {
                    b.Property<int>("Codl")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AnoPublicacao")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("TEXT");

                    b.Property<int>("Edicao")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Editora")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("TEXT");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("TEXT");

                    b.HasKey("Codl");

                    b.ToTable("Livros");
                });

            modelBuilder.Entity("AppLivroCadastro.Domain.Entities.LivroAssunto", b =>
                {
                    b.Property<int>("LivroCodl")
                        .HasColumnType("INTEGER");

                    b.Property<int>("AssuntoCodAs")
                        .HasColumnType("INTEGER");

                    b.HasKey("LivroCodl", "AssuntoCodAs");

                    b.HasIndex("AssuntoCodAs");

                    b.ToTable("LivroAssuntos");
                });

            modelBuilder.Entity("AppLivroCadastro.Domain.Entities.LivroAutor", b =>
                {
                    b.Property<int>("LivroCodl")
                        .HasColumnType("INTEGER");

                    b.Property<int>("AutorCodAu")
                        .HasColumnType("INTEGER");

                    b.HasKey("LivroCodl", "AutorCodAu");

                    b.HasIndex("AutorCodAu");

                    b.ToTable("LivroAutores");
                });

            modelBuilder.Entity("AppLivroCadastro.Domain.Entities.PrecoLivroFormaCompra", b =>
                {
                    b.Property<int>("LivroCodl")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FormaCompraID")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Preco")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("LivroCodl", "FormaCompraID");

                    b.HasIndex("FormaCompraID");

                    b.ToTable("PrecoLivroFormaCompra");
                });

            modelBuilder.Entity("AppLivroCadastro.Reports.Models.LivroAutorAssuntoReport", b =>
                {
                    b.Property<string>("AnoPublicacaoLivro")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("AssuntoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("AutorId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("DescricaoAssunto")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("EditoraLivro")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("LivroId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NomeAutor")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TituloLivro")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.ToTable("LivroAutorAssuntoReport");
                });

            modelBuilder.Entity("AppLivroCadastro.Domain.Entities.LivroAssunto", b =>
                {
                    b.HasOne("AppLivroCadastro.Domain.Entities.Assunto", "Assunto")
                        .WithMany("LivroAssuntos")
                        .HasForeignKey("AssuntoCodAs")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppLivroCadastro.Domain.Entities.Livro", "Livro")
                        .WithMany("LivroAssuntos")
                        .HasForeignKey("LivroCodl")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Assunto");

                    b.Navigation("Livro");
                });

            modelBuilder.Entity("AppLivroCadastro.Domain.Entities.LivroAutor", b =>
                {
                    b.HasOne("AppLivroCadastro.Domain.Entities.Autor", "Autor")
                        .WithMany("LivroAutores")
                        .HasForeignKey("AutorCodAu")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppLivroCadastro.Domain.Entities.Livro", "Livro")
                        .WithMany("LivroAutores")
                        .HasForeignKey("LivroCodl")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Autor");

                    b.Navigation("Livro");
                });

            modelBuilder.Entity("AppLivroCadastro.Domain.Entities.PrecoLivroFormaCompra", b =>
                {
                    b.HasOne("AppLivroCadastro.Domain.Entities.FormaCompra", "FormaCompra")
                        .WithMany("PrecosLivroFormaCompra")
                        .HasForeignKey("FormaCompraID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppLivroCadastro.Domain.Entities.Livro", "Livro")
                        .WithMany("PrecosLivroFormaCompra")
                        .HasForeignKey("LivroCodl")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FormaCompra");

                    b.Navigation("Livro");
                });

            modelBuilder.Entity("AppLivroCadastro.Domain.Entities.Assunto", b =>
                {
                    b.Navigation("LivroAssuntos");
                });

            modelBuilder.Entity("AppLivroCadastro.Domain.Entities.Autor", b =>
                {
                    b.Navigation("LivroAutores");
                });

            modelBuilder.Entity("AppLivroCadastro.Domain.Entities.FormaCompra", b =>
                {
                    b.Navigation("PrecosLivroFormaCompra");
                });

            modelBuilder.Entity("AppLivroCadastro.Domain.Entities.Livro", b =>
                {
                    b.Navigation("LivroAssuntos");

                    b.Navigation("LivroAutores");

                    b.Navigation("PrecosLivroFormaCompra");
                });
#pragma warning restore 612, 618
        }
    }
}
